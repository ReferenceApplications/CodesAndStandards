<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Web.Extensions" #>
<#@ assembly name ="$(ProjectDir)$(OutDir)ReferenceApplications.CodesAndStandards.CodeGen.dll" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Web.Script.Serialization" #>
<#@ import namespace="CodesAndStandards" #>
<#@ import namespace="CodesAndStandards.Model" #>
<#@ output extension=".json" encoding="utf-8" #>
<#
	var dataPath = Path.Combine(Path.GetDirectoryName(this.Host.ResolvePath(this.Host.TemplateFile)), "../../../", "Data");
	CodeGenEngine engine = new CodeGenEngine(dataPath);
	var countryRegions = engine.GetCurrentHydratedCountryRegions();
	var simpleCountries = countryRegions.Select(e => new SimpleCountry(e)).ToList();

	var ser = new JavaScriptSerializer();
#>
<#=ser.Serialize(simpleCountries).Replace("},{", "},\r\n\t{").Replace("[{","[\r\n\t{").Replace("}]", "}\r\n]")#>
<#+
	public class SimpleCountry
	{
		public int Id { get; set; }
		public string Name { get; set; }
		public string Code { get; set; }

		public SimpleCountry(CountryRegion cr)
		{
			var iso = cr.Iso3166_1s.Single(e => e.Iso639_1Code == "en");
			Id = cr.CountryRegionId;
			Name = iso.CountryShortName;
			Code = iso.Alpha2Code;
		}
	}
#>